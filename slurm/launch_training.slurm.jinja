#!/bin/bash
#SBATCH --job-name={{ job_name }}
#SBATCH --nodes={{ nodes }}
#SBATCH --ntasks-per-node={{ n_tasks_per_node }}
#SBATCH --gres=gpu:{{ gpus_per_node }}
{% if cpus_per_task %}
#SBATCH --cpus-per-task={{ cpus_per_task }}
{% endif %}
#SBATCH --partition={{ partition }}
#SBATCH --output={{ slurm_logs_path }}/train-%j.out
#SBATCH --error={{ slurm_logs_path }}/train-%j.err
{% if qos %}
#SBATCH --qos={{ qos }}
{% endif %}
{% if mail_type %}
#SBATCH --mail-type={{ mail_type }}
{% endif %}
{% if mail_user %}
#SBATCH --mail-user={{ mail_user }}
{% endif %}
{% if exclude_nodes %}
#SBATCH --exclude={{ exclude_nodes|join(',') }}
{% endif %}
{% if time %}
#SBATCH --time={{ time }}
{% endif %}
{% if constraint %}
#SBATCH --constraint={{ constraint }}
{% endif %}
{% if account %}
#SBATCH --account={{ account }}
{% endif %}
{% if reservation %}
#SBATCH --reservation={{ reservation }}
{% endif %}

set -e

TRAINER_PYTHON_FILE={{ path_to_trainer_python_file }}
nvidia-smi

# Show some environment variables
echo python3 version = `python3 --version`
echo "Python path: $(which python3)"
echo "NCCL version: $(python -c "import torch;print(torch.cuda.nccl.version())")"
echo "CUDA version: $(python -c "import torch;print(torch.version.cuda)")"

echo "START TIME: $(date)"
secs_to_human() {
    echo "$(( ${1} / 3600 )):$(( (${1} / 60) % 60 )):$(( ${1} % 60 ))"
}
start=$(date +%s)
echo "$(date -d @${start} "+%Y-%m-%d %H:%M:%S"): ${SLURM_JOB_NAME} start id=${SLURM_JOB_ID}\n"

# SLURM stuff
export HOSTNAMES=`scontrol show hostnames "$SLURM_JOB_NODELIST"`
export MASTER_ADDR=$(scontrol show hostnames "$SLURM_JOB_NODELIST" | head -n 1)
export MASTER_PORT=6000
export COUNT_NODE=`scontrol show hostnames "$SLURM_JOB_NODELIST" | wc -l`

export TMPDIR=/scratch
export CUDA_DEVICE_MAX_CONNECTIONS="1"

export HUGGINGFACE_HUB_CACHE={{ hf_cache }}
export HF_DATASETS_CACHE={{ hf_cache }}
export HF_MODULES_CACHE={{ hf_cache }}
export HF_HOME={{ hf_cache }}

echo go $COUNT_NODE
echo $HOSTNAMES

CMD=" $TRAINER_PYTHON_FILE \
    --config-file {{ config_path_yaml }} \
    "
export LAUNCHER="torchrun \
    --nproc_per_node {{ gpus_per_node }} \
    --nnodes $COUNT_NODE \
    {{ torchrun_args }} \
    --node_rank $SLURM_PROCID \
    --role $SLURMD_NODENAME: \
    --max_restarts 0 \
    --tee 3 \
    "

# Wait a random number between 0 and 1000 (milliseconds) to avoid too many concurrent requests to the hub
random_milliseconds=$(( RANDOM % 1001 ))
sleep_time=$(bc <<< "scale=3; $random_milliseconds / 1000")
echo "Sleeping for $sleep_time seconds..."
sleep $sleep_time

launch_args="srun $SRUN_ARGS -u bash -c $LAUNCHER --node_rank $SLURM_PROCID --role $SLURMD_NODENAME: $CMD"

srun $SRUN_ARGS -u bash -c "$LAUNCHER --node_rank $SLURM_PROCID --role $SLURMD_NODENAME: $CMD"

echo "END TIME: $(date)"